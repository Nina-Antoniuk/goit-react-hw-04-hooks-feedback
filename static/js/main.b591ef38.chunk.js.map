{"version":3,"sources":["components/Statistics/Statistics.module.css","components/Feedback/Feedback.module.css","components/Section/Section.module.css","components/Section/Section.js","components/Feedback/Feedback.js","components/Notification/Notification.js","components/Statistics/Statistics.js","App.js","index.js"],"names":["module","exports","Section","title","children","className","s","Feedback","states","onLeaveFeedback","list","map","state","reaction","onClick","e","type","Notification","message","Statistics","good","neutral","bad","total","positivePercentage","listItem","App","useState","setGood","setNeutral","setBad","clickHandler","useCallback","target","textContent","toLowerCase","prev","Error","countTotalFeedback","percentage","toFixed","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+HACAA,EAAOC,QAAU,CAAC,KAAO,yBAAyB,SAAW,+B,kBCA7DD,EAAOC,QAAU,CAAC,KAAO,uBAAuB,SAAW,6B,iBCA3DD,EAAOC,QAAU,CAAC,MAAQ,yB,+JCeXC,MAbf,YAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACxB,OACE,oCACE,oBAAIC,UAAWC,IAAEH,MAAjB,SAAyBA,IACxBC,M,gBCuBQG,MA3Bf,YAAgD,IAA5BC,EAA2B,EAA3BA,OAAQC,EAAmB,EAAnBA,gBAC1B,OACE,mCACE,oBAAIJ,UAAWC,IAAEI,KAAjB,SACGF,EAAOG,KAAI,SAAAC,GACV,OACE,oBAAIP,UAAU,WAAd,SACE,wBACEA,UAAWC,IAAEO,SACbC,QAAS,SAAAC,GAAC,OAAIN,EAAgBM,IAC9BC,KAAK,SAHP,SAKGJ,KANyBA,WCC3BK,MARf,YAAoC,IAAZC,EAAW,EAAXA,QACtB,OAAO,4BAAIA,K,gBC8BEC,MA9Bf,YAAwE,IAAlDC,EAAiD,EAAjDA,KAAMC,EAA2C,EAA3CA,QAASC,EAAkC,EAAlCA,IAAKC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,mBAC/C,OACE,qBAAInB,UAAWC,IAAEI,KAAjB,UACE,qBAAIL,UAAWC,IAAEmB,SAAjB,oBACUL,IADqB,QAG/B,qBAAIf,UAAWC,IAAEmB,SAAjB,uBACaJ,IADkB,WAG/B,qBAAIhB,UAAWC,IAAEmB,SAAjB,mBACSH,IADsB,OAG/B,qBAAIjB,UAAWC,IAAEmB,SAAjB,8BACoBF,MADW,SAG/B,qBAAIlB,UAAWC,IAAEmB,SAAjB,4CACkCD,MADH,gBC6CtBE,MAxDf,WACE,MAAwBC,mBAAS,GAAjC,mBAAOP,EAAP,KAAaQ,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAON,EAAP,KAAgBQ,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAOL,EAAP,KAAYQ,EAAZ,KAEMC,EAAeC,uBAAY,SAAAjB,GAE/B,OADcA,EAAEkB,OAAOC,YAAYC,eAEjC,IAAK,OACHP,GAAQ,SAAAQ,GAAI,OAAIA,EAAO,KACvB,MACF,IAAK,UACHP,GAAW,SAAAO,GAAI,OAAIA,EAAO,KAC1B,MACF,IAAK,MACHN,GAAO,SAAAM,GAAI,OAAIA,EAAO,KACtB,MACF,QACE,MAAM,IAAIC,SAEb,IAEGC,EAAqB,WACzB,OAAOlB,EAAOC,EAAUC,GAQ1B,OACE,sBAAKjB,UAAU,UAAf,UACE,cAAC,EAAD,CAASF,MAAM,wBAAf,SACE,cAAC,EAAD,CACEK,OAAQ,CAAC,OAAQ,UAAW,OAC5BC,gBAAiBsB,MAGrB,cAAC,EAAD,CAAS5B,MAAM,aAAf,SACGmC,IACC,cAAC,EAAD,CACElB,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOe,EACPd,mBApB8B,WACtC,IAAMe,EAAqB,IAAPnB,EAAckB,IAClC,MAAM,GAAN,OAAUA,IAAuB,EAAIC,EAAWC,QAAQ,GAAK,EAA7D,QAqBM,cAAC,EAAD,CAActB,QAAQ,4BCnDhCuB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.b591ef38.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Statistics_list__3xUiS\",\"listItem\":\"Statistics_listItem__1wZyF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Feedback_list__1FKEE\",\"reaction\":\"Feedback_reaction__3ZkrC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Section_title__1siKM\"};","import PropTypes from 'prop-types';\nimport s from './Section.module.css';\n\nfunction Section({ title, children }) {\n  return (\n    <section>\n      <h2 className={s.title}>{title}</h2>\n      {children}\n    </section>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.element,\n};\nexport default Section;\n","import { PropTypes } from 'prop-types';\nimport s from './Feedback.module.css';\n\nfunction Feedback({ states, onLeaveFeedback }) {\n  return (\n    <>\n      <ul className={s.list}>\n        {states.map(state => {\n          return (\n            <li className=\"listItem\" key={state}>\n              <button\n                className={s.reaction}\n                onClick={e => onLeaveFeedback(e)}\n                type=\"button\"\n              >\n                {state}\n              </button>\n            </li>\n          );\n        })}\n      </ul>\n    </>\n  );\n}\n\nFeedback.propTypes = {\n  states: PropTypes.arrayOf(PropTypes.string),\n  onLeaveFeedback: PropTypes.func,\n};\n\nexport default Feedback;\n","import PropTypes from 'prop-types';\n\nfunction Notification({ message }) {\n  return <p>{message}</p>;\n}\n\nNotification.propTypes = {\n  message: PropTypes.string,\n};\n\nexport default Notification;\n","import PropTypes from 'prop-types';\nimport s from './Statistics.module.css';\n\nfunction Statistics({ good, neutral, bad, total, positivePercentage }) {\n  return (\n    <ul className={s.list}>\n      <li className={s.listItem} key=\"good\">\n        Good - {good}\n      </li>\n      <li className={s.listItem} key=\"neutral\">\n        Neutral - {neutral}\n      </li>\n      <li className={s.listItem} key=\"bad\">\n        Bad - {bad}\n      </li>\n      <li className={s.listItem} key=\"total\">\n        Total feedback - {total()}\n      </li>\n      <li className={s.listItem} key=\"positive\">\n        Positive feedback percentage - {positivePercentage()}\n      </li>\n    </ul>\n  );\n}\n\nStatistics.propTypes = {\n  good: PropTypes.number,\n  neutral: PropTypes.number,\n  bad: PropTypes.number,\n  total: PropTypes.func,\n  positivePercentage: PropTypes.func,\n};\n\nexport default Statistics;\n","import { useState, useCallback } from 'react';\nimport './App.css';\nimport Section from './components/Section';\nimport Feedback from './components/Feedback';\nimport Notification from './components/Notification';\nimport Statistics from './components/Statistics';\n\nfunction App() {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const clickHandler = useCallback(e => {\n    const value = e.target.textContent.toLowerCase();\n    switch (value) {\n      case 'good':\n        setGood(prev => prev + 1);\n        break;\n      case 'neutral':\n        setNeutral(prev => prev + 1);\n        break;\n      case 'bad':\n        setBad(prev => prev + 1);\n        break;\n      default:\n        throw new Error();\n    }\n  }, []);\n\n  const countTotalFeedback = () => {\n    return good + neutral + bad;\n  };\n\n  const countPositiveFeedbackPercentage = () => {\n    const percentage = (good * 100) / countTotalFeedback();\n    return `${countTotalFeedback() > 0 ? percentage.toFixed(2) : 0}%`;\n  };\n\n  return (\n    <div className=\"wrapper\">\n      <Section title=\"Please leave feedback\">\n        <Feedback\n          states={['good', 'neutral', 'bad']}\n          onLeaveFeedback={clickHandler}\n        />\n      </Section>\n      <Section title=\"Statistics\">\n        {countTotalFeedback() ? (\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={countTotalFeedback}\n            positivePercentage={countPositiveFeedbackPercentage}\n          />\n        ) : (\n          <Notification message=\"No feedback given\" />\n        )}\n      </Section>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}